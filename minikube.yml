---
- name: Install and start Minikube on RHEL 9 using Docker CE
  hosts: all
  vars:
    minikube_vers: "v1.36.0"
    helm_vers: "v3.17.4"
    non_root_user: vagrant  # <-- Replace with your remote user
    memory: 3g
    cpus: 2

  tasks:
    - name: Install required packages for repository management
      become: true
      ansible.builtin.yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: Add Docker CE repository
      become: true
      ansible.builtin.yum_repository:
        name: docker-ce
        description: Docker CE Stable - x86_64
        baseurl: https://download.docker.com/linux/centos/9/x86_64/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: yes
        state: present

    - name: Install Docker CE packages
      become: true
      ansible.builtin.yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Enable and start Docker service
      become: true
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: Ensure non-root user is in docker group
      become: true
      ansible.builtin.user:
        name: "{{ non_root_user }}"
        groups: docker
        append: true
  
    - name: Reset ssh connection to allow user changes
      ansible.builtin.meta:
        reset_connection

    - name: Install additional useful packages
      become: true
      ansible.builtin.yum:
        name:
          - conntrack
          - wget
          - curl
          - socat
          - jq
          - unzip
        state: present

    - name: Download helm binary tarball
      become: true
      ansible.builtin.get_url:
        url: "https://get.helm.sh/helm-{{ helm_vers }}-linux-amd64.tar.gz"
        dest: /tmp/helm-{{ helm_vers }}-linux-amd64.tar.gz
        mode: '0644'

    - name: Unarchive helm binary
      become: true
      ansible.builtin.unarchive:
        src: /tmp/helm-{{ helm_vers }}-linux-amd64.tar.gz
        dest: /usr/local/bin/
        remote_src: true
        extra_opts: [--strip-components=1]

    - name: Clean up temporary files
      become: true
      ansible.builtin.file:
        path: "/tmp/helm-{{ helm_vers }}-linux-amd64.tar.gz"
        state: absent

    - name: Check if minikube binary exists and get checksum
      become: true
      ansible.builtin.stat:
        path: /usr/local/bin/minikube
        checksum_algorithm: sha256
      register: minikube_stat

    - name: Download minikube binary idempotently
      become: true
      ansible.builtin.get_url:
        url: "https://github.com/kubernetes/minikube/releases/download/{{ minikube_vers }}/minikube-linux-amd64"
        dest: /usr/local/bin/minikube
        mode: '0755'
        force: false
        checksum: "{{ 'sha256:' + minikube_stat.stat.checksum if minikube_stat.stat.exists else omit }}"

    - name: Check Minikube status as non-root user
      ansible.builtin.command:
        cmd: /usr/local/bin/minikube status --format "{% raw %}{{.Host}}{% endraw %}"
      register: minikube_status
      failed_when: false
      changed_when: false
      become: false
      remote_user: "{{ non_root_user }}"

    - name: Start Minikube if not running as non-root user
      ansible.builtin.command:
        cmd: /usr/local/bin/minikube start --driver=docker --memory="{{ memory }}" --cpus="{{ cpus }}"
      when: minikube_status.stdout != "Running"
      become: false
      remote_user: "{{ non_root_user }}"

    - name: Verify Minikube version as non-root user
      ansible.builtin.command:
        cmd: /usr/local/bin/minikube version
      register: minikube_version_output
      changed_when: false
      become: false
      remote_user: "{{ non_root_user }}"

    - name: Show Minikube version
      ansible.builtin.debug:
        msg: "{{ minikube_version_output.stdout }}"

    - name: Verify Minikube is running as non-root user
      ansible.builtin.command:
        cmd: /usr/local/bin/minikube status --format "{% raw %}{{.Host}}{% endraw %}"
      register: minikube_status_check
      changed_when: false
      become: false
      remote_user: "{{ non_root_user }}"

    - name: Report Minikube running status
      ansible.builtin.debug:
        msg: >
          {% if minikube_status_check.stdout == "Running" %}
            Minikube is running.
          {% else %}
            Minikube is NOT running. Status output: {{ minikube_status_check.stdout }}
          {% endif %}

    - name: Inform about manual dashboard URL retrieval and SSH tunneling
      ansible.builtin.debug:
        msg:
          - "Enable metrics addon:"
          - "   minikube addons enable metrics-server"
          - "To access the Minikube Kubernetes dashboard, you can manually run:"
          - "   minikube dashboard --url"
          - "This will output the full URL to open in your web browser."
          - " " 
          - "Note: By default, the dashboard URL is accessible only from localhost."
          - "To access it remotely, it is recommended to set up an SSH tunnel, for example:"
          - "  ssh -L 8001:127.0.0.1:<dashboard-port> <user>@<minikube-host>"