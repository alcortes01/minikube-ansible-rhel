---
- name: Install and start Minikube on RHEL 9 using Docker CE
  hosts: all
  vars:
    minikube_vers: "v1.33.0"
    kubectl_vers: "v1.33.0"
    non_root_user: vagrant  # <-- Replace with your remote user

  tasks:
    - name: Install required packages for repository management
      become: true
      ansible.builtin.yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: Add Docker CE repository
      become: true
      ansible.builtin.yum_repository:
        name: docker-ce
        description: Docker CE Stable - x86_64
        baseurl: https://download.docker.com/linux/centos/9/x86_64/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: yes
        state: present

    - name: Install Docker CE packages
      become: true
      ansible.builtin.yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Enable and start Docker service
      become: true
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Ensure non-root user is in docker group
      become: true
      ansible.builtin.user:
        name: "{{ non_root_user }}"
        groups: docker
        append: yes

    - name: Install additional required packages
      become: true
      ansible.builtin.yum:
        name:
          - conntrack
          - wget
          - curl
          - socat
          - jq
          - unzip
        state: present

    - name: Check if minikube binary exists and get checksum
      become: true
      ansible.builtin.stat:
        path: /usr/local/bin/minikube
        checksum_algorithm: sha256
      register: minikube_stat

    - name: Download minikube binary idempotently
      become: true
      ansible.builtin.get_url:
        # url: "https://storage.googleapis.com/minikube/releases/{{ minikube_version }}/minikube-linux-amd64"
        url: "https://github.com/kubernetes/minikube/releases/download/{{ minikube_vers }}/minikube-linux-amd64"
        dest: /usr/local/bin/minikube
        mode: '0755'
        force: no
        checksum: "{{ 'sha256:' + minikube_stat.stat.checksum if minikube_stat.stat.exists else omit }}"

    - name: Verify minikube binary exists
      become: true
      ansible.builtin.stat:
        path: /usr/local/bin/minikube
      register: minikube_binary

    - name: Fail if minikube binary missing
      ansible.builtin.fail:
        msg: "Minikube binary not found at /usr/local/bin/minikube"
      when: not minikube_binary.stat.exists

    - name: Download kubectl binary matching minikube_version
      become: true
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_vers }}/bin/linux/amd64/kubectl"
        dest: "/usr/local/bin/kubectl"
        mode: '0755'
        force: yes

    - name: Download kubectl checksum matching minikube_version
      become: true
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_vers }}/bin/linux/amd64/kubectl.sha256"
        dest: "/tmp/kubectl.sha256"
        mode: '0644'
        force: yes

    - name: Verify kubectl binary checksum (arm64)
      become: true
      ansible.builtin.shell: |
        cd /usr/local/bin && echo "$(cat /tmp/kubectl.sha256) kubectl" | sha256sum --check
      register: kubectl_checksum_result
      changed_when: false
      failed_when: "'OK' not in kubectl_checksum_result.stdout"

    - name: Show kubectl version
      become: false
      ansible.builtin.command:
        cmd: /usr/local/bin/kubectl version --client
      register: kubectl_version
      changed_when: false

    - name: Display kubectl version info
      ansible.builtin.debug:
        msg: "{{ kubectl_version.stdout }}"

    # Run all minikube & docker related commands as non-root user

    - name: Check Minikube status as non-root user
      ansible.builtin.command:
        cmd: /usr/local/bin/minikube status --format "{% raw %}{{.Host}}{% endraw %}"
      register: minikube_status
      failed_when: false
      changed_when: false
      become: false
      remote_user: "{{ non_root_user }}"

    - name: Start Minikube if not running as non-root user
      ansible.builtin.command:
        cmd: /usr/local/bin/minikube start --driver=docker
      when: minikube_status.stdout != "Running"
      become: false
      remote_user: "{{ non_root_user }}"

    - name: Verify Minikube version as non-root user
      ansible.builtin.command:
        cmd: /usr/local/bin/minikube version
      register: minikube_version_output
      changed_when: false
      become: false
      remote_user: "{{ non_root_user }}"

    - name: Show Minikube version
      ansible.builtin.debug:
        msg: "{{ minikube_version_output.stdout }}"

    - name: Verify Minikube is running as non-root user
      ansible.builtin.command:
        cmd: /usr/local/bin/minikube status --format "{% raw %}{{.Host}}{% endraw %}"
      register: minikube_status_check
      changed_when: false
      become: false
      remote_user: "{{ non_root_user }}"

    - name: Report Minikube running status
      ansible.builtin.debug:
        msg: >
          {% if minikube_status_check.stdout == "Running" %}
            Minikube is running.
          {% else %}
            Minikube is NOT running. Status output: {{ minikube_status_check.stdout }}
          {% endif %}

    - name: Inform about manual dashboard URL retrieval and SSH tunneling
      ansible.builtin.debug:
        msg:
          - "To access the Minikube Kubernetes dashboard, you can manually run:"
          - "   minikube dashboard --url"
          - "This will output the full URL to open in your web browser."
          - "" 
          - "Note: By default, the dashboard URL is accessible only from localhost."
          - "To access it remotely, it is recommended to set up an SSH tunnel, for example:"
          - "  ssh -L 8001:127.0.0.1:<dashboard-port> <user>@<minikube-host>"